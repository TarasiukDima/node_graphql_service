type Band {
  id: ID!
  name: String
  origin: String
  website: String
  members: [Member!]
  genres: [Genre!]
}

type Query {
  getBands(limit: Int, offset: Int): [Band]
  getBand(id: ID!): Band
}

type Member {
  artist: Artist!
  instrument: String
  years: String
}

input MemberOptions {
  artist: ID!
  instrument: String
  years: String
}

input BandOptions {
  name: String!
  origin: String
  website: String
  members: [MemberOptions!]
  genres: [ID!]
}

type DeleteBand {
  acknowledged: Boolean
  deletedCount: Int
}

type Mutation {
  addBand(inputOptions: BandOptions!): Band
  updateBand(id: ID!, inputOptions: BandOptions!): Band
  removeBand(id: ID!): DeleteBand
}
